*, html {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

:root {
    --theme-dark: #0f5f0f;
    --theme-base: #189c18;
    --theme-lighter: #22a322;
    --theme-light: #28b028;

    --theme-red-lighter: #e33;
    --theme-red-darker: #aa0808;
    --theme-red: #c11;
    --theme-black: #111;
    --theme-white: #eaeaea;

    --card-height: min(17vh, calc(100vw * 9 / 16 * 0.17));
    --card-width: calc(var(--card-height) * 0.75);
}

.no-select {
    user-select: none;
    -webkit-user-select: none;
    -khtml-user-select: none;
    -moz-user-select: none;
    -o-user-select: none;
    -webkit-user-drag: none;
    -khtml-user-drag: none;
    -moz-user-drag: none;
    -o-user-drag: none;
}

html, body {
    width: 100%;
    height: 100%;
}

html {
    background-color: var(--theme-dark);
    background-image: url("/res/card-texture.png");
    overflow: hidden;
}

#main-content {
    /* Force 16/9 */
    width: 100vw;
    height: calc(100vw * 9 / 16);
    max-width: calc(100vh * 16 / 9);
    max-height: 100vh;

    display: flex;
    flex-direction: column;

    margin: auto;
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;

    font-size: var(--card-width);
    box-shadow:  0.1em  0.1em 0.15em #0003 inset,
                -0.1em -0.1em 0.15em #0003 inset;
    background-color: var(--theme-base);
    background-image: radial-gradient(#189c18, #0b770b);

    overflow: hidden;
}

/**************************** Upper content styling ****************************/
#upper-content {
    display: flex;
    justify-content: center;
    align-items: center;
    height: calc(1.2 * var(--card-height));
    background-color: #0002;
}

.ace-stack,
#deck-empty-stack,
#deck-stack {
    --border-width: 0.025em;

    display: flex;
    justify-content: center;
    align-items: center;

    margin: 0 calc(0.25 * var(--card-width));

    position: relative;
    width: var(--card-width);
    height: var(--card-height);

    background: var(--theme-light) center / 33% no-repeat;
    background-blend-mode: overlay, darken;

    border: var(--border-width) solid var(--theme-lighter);
    border-radius: 0.11em;
    font-size: var(--card-height);

    /* Hide border on  */
    &:has(:first-child) { border: none; }
}

/* Add images */
.ace-stack:nth-child(1) { background-image: url("/res/hearts-icon-dark.png"); }
.ace-stack:nth-child(2) { background-image: url("/res/diamonds-icon-dark.png"); }
.ace-stack:nth-child(3) { background-image: url("/res/clubs-icon.png"); }
.ace-stack:nth-child(4) {
    background-image: url("/res/spades-icon.png");
    margin-right: calc(1.75* var(--card-width));
}

#deck-stack { background-image: url("/res/deck-cycle-icon.png"); background-size: 50%; }

/* Adjust placement of deck stacks */
.ace-stack > .card,
#deck-empty-stack > .card,
#deck-stack > .card {
    position: absolute;
}

#deck-stack { cursor: pointer; }
#deck-stack > .card { pointer-events: none; }

/**************************** Column styling ****************************/
#board-content {
    display: flex;
    flex: 3;
    padding-top: 1%;
    justify-content: center;
}

.column {
    display: flex;
    flex-direction: column;
    align-items: center;
    width: calc(1.5 * var(--card-width));
}

.column > .card:not(:first-child) {
    margin-top: calc(-0.85 * var(--card-height));
}

.column > .card:not(.covered) ~ .card:not(.covered) {
    margin-top: calc(-0.75 * var(--card-height));
}

/**************************** Controls styling ****************************/

#controls-content {
    display: flex;
    column-gap: calc(0.5 * var(--card-width));
    align-items: center;

    position: absolute;
    left: 5%;
    right: 5%;
    bottom: 0;

    padding: 0.25% 3% 0 3%;
    height: 8%;

    background-color: #252422;
    background-image: linear-gradient(#252422, #1b1a19);
    border-top-left-radius: calc(0.2 * var(--card-width));
    border-top-right-radius: calc(0.2 * var(--card-width));
    opacity: 0.9;
}

#undo-btn {
    background-color: #0000;
    border: none;

    color: var(--theme-red);
    font: 700 calc(0.25 * var(--card-width)) "Signika", sans-serif;
    text-shadow: 0.2em 0.2em 0.1em #0003;

    cursor: pointer;
    transition: 0.1s color;
}

#undo-btn:hover { color: var(--theme-red-lighter); }
#undo-btn:active { color: var(--theme-red-darker); }

/**************************** Card styling ****************************/
.card {
    position: relative;
    width: var(--card-width);
    height: var(--card-height);

    background: var(--theme-white) center 56% / 50% no-repeat;

    border: 0.025em solid var(--theme-black);
    border-radius: 0.11em;
    font-size: var(--card-height);
}

.card > p {
    position: absolute;
    top: 4%;
    left: 7%;
    color: var(--theme-black);
    font: 600 0.2em "Signika", sans-serif;
    pointer-events: none;
}

.card > img {
    position: absolute;
    top: 8%;
    right: 11%;
    width: 20%;
    aspect-ratio: 1;
    pointer-events: none;
}

.card.diamonds > p,
.card.hearts > p { color: var(--theme-red) }

.card.hearts   { background-image: url("/res/hearts-icon.png");   }
.card.diamonds { background-image: url("/res/diamonds-icon.png"); }
.card.clubs    { background-image: url("/res/clubs-icon.png");    }
.card.spades   { background-image: url("/res/spades-icon.png");   }

.card.covered { background: url("/res/card-texture.png") repeat; }
.card.covered > * { display: none; }

.card:not(.covered) { cursor: pointer; }

/**************************** Floating card stack styling ****************************/

#moving-stack { position: absolute; }

#moving-stack > .card:not(:first-child) {
    margin-top: calc(-0.85 * var(--card-height));
}

/**************************** Win container ****************************/

#win-container {
    display: none;
    flex-direction: column;
    justify-content: center;
    align-items: center;

    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: #0008;

    animation: fadeIn 500ms linear;
}

#win-container > h1 {
    color: var(--theme-white);
    text-shadow: 0.1em 0.1em 0.08em var(--theme-black);
    font: 700 calc(0.75 * var(--card-width))/1.5 "Signika", sans-serif;
}

#win-container > button {
    margin-bottom: 2em;
    padding: 0.33em 0.5em;

    background-color: var(--theme-red);
    border: none;
    border-radius: 0.4em;
    color: var(--theme-white);
    font: 600 calc(0.3 * var(--card-width)) "Signika", sans-serif;

    cursor: pointer;
    transition: 0.1s background-color;
}

#win-container > button:hover { background-color: var(--theme-red-lighter); }
#win-container > button:active { background-color: var(--theme-red-darker); }

/**************************** Animation keyframes ****************************/

/* Called twice--once before flipping card, and once after (reversed) */
@keyframes uncoverCard {
    0%, 100% { transform: scale(1, 1) }
    50% { transform: scale(0, 1.25) }
}

@keyframes cycleCardFromDeck {
    from {
        right: calc(-1.5* var(--card-width) - 0.025* var(--card-height));
        transform: scale(1, 1);
        z-index: 999999;
    }
    50% {
        transform: scale(0, 1.1);
    }
    to {
        right: 0;
        transform: scale(1, 1);
        z-index: 999999;
    }
}

@keyframes moveCardBackToDeck {
    from {
        left: calc(-1.5* var(--card-width) - 0.025* var(--card-height));
        z-index: 999999;
    }
    to {
        left: 0;
        z-index: 999999;
    }
}

/* Used to move a card from a specific point to where it is now */
@keyframes cardMoveBackToStart {
    from {
        top: var(--start-top);
        left: var(--start-left);
        z-index: 999999;
    }
    to {
        top: 0;
        left: 0;
        z-index: 999999;
    }
}

/* Card animation on win condition */
@keyframes cardEndAnimation {
    from {
        top: var(--start-top);
        left: var(--start-left);
        opacity: 1;
        transform: scale(1);
    }
    25% { top: calc(var(--start-top) - 25%); }
    to {
        top: 100%;
        left: var(--end-left);
        opacity: 1;
        transform: scale(2);
    }
}

@keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
}